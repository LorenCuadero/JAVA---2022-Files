/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loren_inventory;

import Connection.connect;
import DBUtil.DURC;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login_page.AdminHomePage;
import login_page.InventoryHomePage;
import login_page.LoginFrame1;
import login_page.Management;
import login_page.Welcome;

/**
 *
 * @author student.admin
 */
public class Product1 extends javax.swing.JFrame {

    java.sql.Connection con;
    PreparedStatement pst;

    public Product1() {
        initComponents();
        this.setLocationRelativeTo(null); // center form on the screen
        String url = "jdbc:mysql://localhost/super mall";
        String user = "root";
        String pass = "";
        try {
            con = DriverManager.getConnection(url, user, pass);
        } catch (Exception ex) {
            System.out.println("Error : " + ex.getMessage());
        }
        table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jProd = new javax.swing.JTextField();
        jadd = new javax.swing.JButton();
        jupdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jprice = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jbarcode = new javax.swing.JTextField();
        jadd1 = new javax.swing.JButton();
        jadd2 = new javax.swing.JButton();
        jview7 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jquant = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("/-\\ STR0 ");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Star Merchandise Inventory System");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 70)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("|");

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 51));
        jLabel7.setText("Product Inventory");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Check POS");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Sign Out");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Home");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("-");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("x");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 406, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel7)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel8)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel9)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel14)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)))
                .addGap(38, 38, 38))
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel1.setText("Product");

        jLabel11.setFont(new java.awt.Font("Bookman Old Style", 1, 8)); // NOI18N
        jLabel11.setText("_______________________________________________________________________________________________________________");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Product : ");

        jadd.setText("Add");
        jadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddActionPerformed(evt);
            }
        });

        jupdate.setText("Update");
        jupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jupdateActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Barcode", "Product", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Price :");

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Barcode :");

        jadd1.setText("View Product Table");
        jadd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jadd1ActionPerformed(evt);
            }
        });

        jadd2.setText("Refresh ");
        jadd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jadd2ActionPerformed(evt);
            }
        });

        jview7.setText("Delete");
        jview7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jview7ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Quantity :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 378, Short.MAX_VALUE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(72, 72, 72)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel15))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jbarcode, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                .addComponent(jProd)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jquant, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jprice, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jadd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jview7)
                                    .addGap(6, 6, 6)
                                    .addComponent(jupdate))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jadd1)
                .addGap(18, 18, 18)
                .addComponent(jadd2)
                .addGap(360, 360, 360))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jProd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jprice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jquant, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jadd)
                            .addComponent(jupdate)
                            .addComponent(jview7)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jadd1)
                    .addComponent(jadd2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void table_update() {
        String sql = "SELECT * FROM newproducts";
        int c;
        try {
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
                Vector v2 = new Vector();

                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("Barcode"));
                    v2.add(rs.getString("Product"));
                    v2.add(rs.getString("Price"));
                    v2.add(rs.getString("Quantity"));

                }

                model.addRow(v2);

            }
        } catch (Exception ex) {
            System.out.println("Error : " + ex.getMessage());
        }
    }
    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        Product1 p = new Product1();
        p.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        CheckPOS po = new CheckPOS();
        po.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you really want to sign out? ", "Warning", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                this.dispose();
                Welcome l = new Welcome();
                l.setVisible(true);
                JOptionPane.showMessageDialog(null, "Successfully Signed Out!");
            } catch (Exception ex) {
                Logger.getLogger(Product1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        InventoryHomePage h = new InventoryHomePage();
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddActionPerformed

        String bar = jbarcode.getText();
        String prod = jProd.getText();
        String price = jprice.getText();
        String quant = jquant.getText();
        if (bar.equals("")) {
            JOptionPane.showMessageDialog(null, "Add A Product Barcode");
        } else if (checkBar(bar)) {
            JOptionPane.showMessageDialog(null, "This Barcode Already Exist");
        } else if (prod.equals("")) {
            JOptionPane.showMessageDialog(null, "Add A Product Description");
        } else if (price.equals("")) {
            JOptionPane.showMessageDialog(null, "Add Product Cost");
        } else if (quant.equals("")) {
            JOptionPane.showMessageDialog(null, "Add  Product Quantity");
        } else {
            PreparedStatement ps;
            String query = "INSERT INTO `newproducts`(`Barcode`,`Product`,`Price` ,`Quantity`) VALUES (?,?,?,?)";
            try {
                ps = connect.getConnection().prepareStatement(query);

                ps.setString(1, bar);
                ps.setString(2, prod);
                ps.setString(3, price);
                ps.setString(4, quant);

                if (ps.executeUpdate() > 0) {
        JOptionPane.showMessageDialog(null, "New Product Added \n To have an accurate Record, please refresh the Table");

                    table_update();
                }

            } catch (SQLException ex) {
                System.out.println("Error : " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jaddActionPerformed

    private void jupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jupdateActionPerformed

        
        String bar = jbarcode.getText();
        String prod = jProd.getText();
        String price = jprice.getText();
        String quant = jquant.getText();
                int dialogResult = JOptionPane.showConfirmDialog(null, "You are updating this Record from the table, some changes might occur. Are you sure to update this? ", "Attention ", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {

        try {
            String sql = "update newproducts set Product='" + jProd.getText() + "',Price='" + jprice.getText() + "', Quantity='" + jquant.getText() + "' where Barcode='" + jbarcode.getText() + "'";
            PreparedStatement ps = connect.getConnection().prepareStatement(sql);

            ps.execute();
            JOptionPane.showMessageDialog(null, "Successfully Updated");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
//            ps.close();
            System.out.println("Finally connected");
        }
//        }
//        try {
//            String sql = "update newproducts set Product='" + jProd.getText() + "',Price='" + jprice.getText() + "', Quantity='" + jquant.getText() + "' where Barcode='" + jbarcode.getText() + "'";
//            PreparedStatement ps = connect.getConnection().prepareStatement(sql);
//
//            pst.execute();
//            JOptionPane.showMessageDialog(null, "Successfully Updated");
//        } catch (Exception exc) {
//            JOptionPane.showMessageDialog(null, exc);
//            System.out.println("Error : " + exc.getMessage());
//        } finally {
//            System.out.println("disconnected");
//        }
//        DefaultTableModel model2 = (DefaultTableModel) jTable1.getModel();
//
//        int selectIndex = jTable1.getSelectedRow();
//
//        String bar = jbarcode.getText();
//        String prod = jProd.getText();
//        String cost = jprice.getText();
//        String quant = jquant.getText();
//
//        PreparedStatement ps;
//        String sql = "update newproducts set Product='" + jProd.getText() + "' ,Price='" + jprice.getText() + "' , Quantity='" + jquant.getText() + "' where Barcode='" + jbarcode.getText() + "'";
//        try {
//            ps = connect.getConnection().prepareStatement(sql);
//
//            ps.setString(1, bar);
//            ps.setString(2, prod);
//            ps.setString(3, cost);
//            ps.setString(4, quant);
//
//            pst.executeUpdate();
//            JOptionPane.showMessageDialog(null, "Succesfully Updated");
//            table_update();
//            jProd.setText("");
//            jprice.setText("");
//            jquant.setText("");
//            jbarcode.requestFocus();
//
//        } catch (SQLException ex) {
//            System.out.println("Error : " + ex.getMessage());
//
//        }
//
////       
//        try {
//            int d = Integer.parseInt(model2.getValueAt(selectIndex, 0).toString());
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost/super mall", "root", "");
//             pst.setString(1, bar);
//            pst.setString(2, prod);
//            pst.setString(3, cost);
//            pst.setInt(4, d);
//            
//        } catch (Exception ex) {
//            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        String prod = jProd.getText();
//        String prod1 = jProd1.getText();
//        String descript = jDescription.getText();
//        String cost = jcost.getText();
//        String quant = jquant.getText();
//        String bar = jbarcode.getText();
//        String status = jstat.getSelectedItem().toString();
//
//        if (prod.equals("")) {
//            JOptionPane.showMessageDialog(null, "Add A Product Category");
//        } 
//        else if (checkProdId(prod)) {
//            JOptionPane.showMessageDialog(null, "Please add another Product Id in updating");
//        } 
//        else if (descript.equals("")) {
//            JOptionPane.showMessageDialog(null, "Add A Product Description");
//        } else if (cost.equals("")) {
//            JOptionPane.showMessageDialog(null, "Add A Product Cost");
//        } else if (quant.equals("")) {
//            JOptionPane.showMessageDialog(null, "Add A Product Quantity");
//        } else if (bar.equals("")) {
//            JOptionPane.showMessageDialog(null, "Add A Product Barcode");
//        } else if (status.equals("Active")) {
//            JOptionPane.showMessageDialog(null, "Reminder: You are adding an Active Category");
//
//            PreparedStatement ps;
//            String query = "UPDATE `products`  SET `Product` =? ,`Description` =? ,`Cost Price` =? , `Quantity` =? ,`Barcode` =?, `Status` =? ) WHERE `Product_Id` =?";
//            try {
//                ps = connect.getConnection().prepareStatement(query);
//
//               ps.setString(1, prod);
//                ps.setString(2, descript);
//                ps.setString(3, cost);
//                ps.setString(4, quant);
//                ps.setString(5, bar);
//                ps.setString(6, status);
//
//                if (ps.executeUpdate() > 0) {
//                    JOptionPane.showMessageDialog(null, "Successfully Updated");
//                    table_update();
//                }
//
//            } catch (SQLException ex) {
//                System.out.print("Error : " + ex.getMessage());
//            }
//        } else if (!status.equals("Active")) {
//            JOptionPane.showMessageDialog(null, "Reminder: You are adding a DeActive Category");
//            PreparedStatement ps;
//            String query = "UPDATE `products`  SET `Product` =? ,`Description` =? ,`Cost Price` =? , `Quantity` =? ,`Barcode` =?, `Status` =? ) WHERE `Product_Id` =? ";
//            try {
//                ps = connect.getConnection().prepareStatement(query);
//
//               ps.setString(1, prod);
//                ps.setString(2, descript);
//                ps.setString(3, cost);
//                ps.setString(4, quant);
//                ps.setString(5, bar);
//                ps.setString(6, status);
//                if (ps.executeUpdate() > 0) {
//                    JOptionPane.showMessageDialog(null, "Successfully Updated");
//                    table_update();
//                }
//
//            } catch (SQLException ex) {
//                System.out.print("Error : " + ex.getMessage());
//            }
//        } else {
//            PreparedStatement ps;
//            String query = "UPDATE `products`  SET  `Product` =? ,`Description` =? ,`Cost Price` =? , `Quantity` =? ,`Barcode` =?, `Status` =? ) WHERE `Product_Id` =?";
//            try {
//                ps = connect.getConnection().prepareStatement(query);
//
//                ps.setString(1, prod);
//                ps.setString(2, descript);
//                ps.setString(3, cost);
//                ps.setString(4, quant);
//                ps.setString(5, bar);
//                ps.setString(6, status);
//
//                if (ps.executeUpdate() > 0) {
//                    JOptionPane.showMessageDialog(null, "New Product Added");
//                    table_update();
//                }
//
//            } catch (SQLException ex) {
//            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//            }
        }

    }//GEN-LAST:event_jupdateActionPerformed

    private void jadd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jadd1ActionPerformed
        String sql = "SELECT * FROM newproducts";
        try {
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
        } catch (Exception ex) {
            System.out.println("Error : " + ex.getMessage());
        }
    }//GEN-LAST:event_jadd1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        try {
            int selectIndex = jTable1.getSelectedRow();
            String bar = jbarcode.getText();
            String prod1 = jProd.getText();
            String cost = jprice.getText();

            jbarcode.setText(model1.getValueAt(selectIndex, 0).toString());
            jProd.setText(model1.getValueAt(selectIndex, 1).toString());
            jprice.setText(model1.getValueAt(selectIndex, 2).toString());
            jquant.setText(model1.getValueAt(selectIndex, 3).toString());

        } catch (ArrayIndexOutOfBoundsException ar) {
            System.out.println("Error : " + ar.getMessage());

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jadd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jadd2ActionPerformed
        String sql = "SELECT * FROM newproducts";
        try {
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
        } catch (Exception ex) {
            System.out.println("Error : " + ex.getMessage());
        }
    }//GEN-LAST:event_jadd2ActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        InventoryHomePage ihp = new InventoryHomePage();
        ihp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jview7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jview7ActionPerformed
        DefaultTableModel model2 = (DefaultTableModel) jTable1.getModel();
        //
        int selectIndex = jTable1.getSelectedRow();

//        int d = Integer.parseInt(model2.getValueAt(selectIndex, 0).toString());
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete this Record? ", "Warning", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                PreparedStatement ps;
                String sql;
                sql = "DELETE FROM `newproducts` WHERE `Barcode`=?";

                ps = connect.getConnection().prepareStatement(sql);

                ps.setString(1, jbarcode.getText());
                jProd.setText("");
                jprice.setText("");
                jquant.setText("");

                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully Deleted!");

            } catch (SQLException ex) {
                System.out.println("Error : " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jview7ActionPerformed

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel14MouseClicked
    public boolean checkProdId(String Barcode) {
        PreparedStatement ps;
        ResultSet rs;
        boolean checkUser = false;
        String query = "SELECT * FROM `newproducts` WHERE `Barcode` =?";
        try {
            ps = connect.getConnection().prepareStatement(query);
            ps.setString(1, Barcode);

            rs = ps.executeQuery();

            if (rs.next()) {
                checkUser = true;
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Product1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        return checkUser;
    }

    public boolean checkBar(String Barcode) {
        PreparedStatement ps;
        ResultSet rs;
        boolean checkUser = false;
        String query = "SELECT * FROM `newproducts` WHERE `Barcode` =?";
        try {
            ps = connect.getConnection().prepareStatement(query);
            ps.setString(1, Barcode);

            rs = ps.executeQuery();

            if (rs.next()) {
                checkUser = true;
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Product1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        return checkUser;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jProd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jadd;
    private javax.swing.JButton jadd1;
    private javax.swing.JButton jadd2;
    private javax.swing.JTextField jbarcode;
    private javax.swing.JTextField jprice;
    private javax.swing.JTextField jquant;
    private javax.swing.JButton jupdate;
    private javax.swing.JButton jview7;
    // End of variables declaration//GEN-END:variables
}
