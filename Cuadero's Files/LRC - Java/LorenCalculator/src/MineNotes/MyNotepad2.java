/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MineNotes;

import java.awt.FileDialog;
import java.awt.datatransfer.Clipboard;
import java.awt.event.TextEvent;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author student.admin
 */
public class MyNotepad2 extends javax.swing.JFrame {

    
    String programName = "Notepad";
    String filename = "";
    String holdText;
    String fn;
    String dir;
    boolean textChanged = false;
    String fileName;
    Clipboard clip = getToolkit().getSystemClipboard();
    /**
     * Creates new form MyNotepad2
     */
    public MyNotepad2() {
        initComponents();
    }
    
    public void checkFile() throws IOException
    {
        BufferedReader read;
        StringBuffer sb = new StringBuffer();
        try
        {
            read = new BufferedReader (new FileReader(fileName));
            String line;
            while ((line = read.readLine()) != null)
            {
                sb.append(line + "\n");
            }
            textArea.setText(sb.toString());
            read.close();
            
        }
        catch(FileNotFoundException e)
        {
            System.out.println("File not found");
        }
        catch(IOException ioe)
        {
            System.out.println("File not found");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textArea = new java.awt.TextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenu = new javax.swing.JMenuItem();
        openMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        saveasMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        colorMenu = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textArea.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                textAreaTextValueChanged(evt);
            }
        });

        jMenu1.setText("File");

        newMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newMenu.setText("New");
        newMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuActionPerformed(evt);
            }
        });
        jMenu1.add(newMenu);

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openMenu.setText("Open File");
        jMenu1.add(openMenu);

        saveMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveMenu.setText("Save ");
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenu);

        saveasMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveasMenu.setText("Save As");
        saveasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveasMenu);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMenu.setText("Exit");
        jMenu1.add(exitMenu);

        jMenuBar1.add(jMenu1);

        colorMenu.setText("Edit");

        jMenuItem6.setText("Text Color");
        colorMenu.add(jMenuItem6);

        jMenuBar1.add(colorMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textArea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textArea, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
      if(filename.equals(""))
          try {
              saveAs();
      } catch (FileNotFoundException ex) {
          Logger.getLogger(MyNotepad2.class.getName()).log(Level.SEVERE, null, ex);
      }
      else
          save(filename);
    }//GEN-LAST:event_saveMenuActionPerformed

    private void saveasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasMenuActionPerformed
        try {
            saveAs();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MyNotepad2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveasMenuActionPerformed

    private void textAreaTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_textAreaTextValueChanged
        if(TextEvent.TEXT_VALUE_CHANGED!=0);
        {
            if (!textChanged)
                setTitle("* "+getTitle());
            textChanged=true;
            saveMenu.setEnabled(true);
        }

    }//GEN-LAST:event_textAreaTextValueChanged

    private void newMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuActionPerformed
        
//        newFile();


    }//GEN-LAST:event_newMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyNotepad2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyNotepad2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyNotepad2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyNotepad2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyNotepad2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu colorMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem newMenu;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JMenuItem saveasMenu;
    private java.awt.TextArea textArea;
    // End of variables declaration//GEN-END:variables

    private void saveAs() throws FileNotFoundException {
        FileDialog fd = new FileDialog(MyNotepad2.this, "Save", FileDialog.SAVE);
       fd.setVisible(true);
       if( fd.getFile()!= null){
        fn = fd.getFile();
        dir=fd.getDirectory();
        filename = dir + fn + ".txt";
        
        setTitle(filename);
        try
        {
            DataOutputStream d = new DataOutputStream (new FileOutputStream(filename)) ;
            holdText = textArea.getText();
            BufferedReader br = new BufferedReader(new StringReader(holdText));
            while ((holdText = br.readLine()) != null);
            {
                d.writeBytes(holdText +"\r\n");
                d.close();
            }
        }
        catch(Exception e)
        {
            System.out.println("File not found");
        }
        textArea.requestFocus();
        save(filename);
    }
    }

    private void save(String filename) {
    
        setTitle(programName+""+filename);
        try
        {
            FileWriter out;
            out = new FileWriter(fn);
        }
        catch(Exception err)
        {
            System.out.println("Error: " + err);
            textChanged = false;
            saveMenu.setEnabled(false);
        }


    }

    private void newFile() throws FileNotFoundException {

           if (textArea.getText().length() <1)
           {
               setTitle("Untitled - "+programName);
               textArea.setText("");
               textChanged=false;
           }
           else if(!textChanged)
           {
               setTitle("Untitled - "+programName);
               textArea.setText("");
               textChanged=false;
           }
           else
           {
               int confirm = JOptionPane.showConfirmDialog(null, true);
               if (confirm == JOptionPane.YES_OPTION)
               {
                   if("".equals(filename))
                           {
                               saveAs();
                           }
               }
           }
           
    }
}
